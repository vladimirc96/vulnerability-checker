package com.master.vulnerabilitychecker.service;

import com.master.vulnerabilitychecker.dto.DependencyDTO;
import com.master.vulnerabilitychecker.model.Dependency;
import com.master.vulnerabilitychecker.model.Repository;
import com.master.vulnerabilitychecker.repository.DependencyRepository;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
public class DependencyService {

    private DependencyRepository dependencyRepo;

    public DependencyService(DependencyRepository dependencyRepo) {
        this.dependencyRepo = dependencyRepo;
    }

    public Dependency save(Dependency dependency) {
        return dependencyRepo.save(dependency);
    }

    public Dependency findOneByName(String name) {
        return dependencyRepo.findOneByName(name);
    }

    public Dependency findOneById(Long id) {
        return dependencyRepo.findOneById(id);
    }

    public List<DependencyDTO> save(List<String> dependencies, Repository repository) {
        List<DependencyDTO> dependencyDTOList = new ArrayList<>();
        for (String dep : dependencies) {
            Dependency dependency = new Dependency();
            dependency.setName(dep);
            dependency.setTracking(false);
            dependency.setRepository(repository);
            dependency = dependencyRepo.save(dependency);
            dependencyDTOList.add(new DependencyDTO(dependency.getId(), dependency.getName(), dependency.isTracking()));
        }
        return dependencyDTOList;
    }

    public List<Dependency> findAllByRepositoryId(Long id) {
        return dependencyRepo.findAllByRepositoryId(id);
    }

    public List<Dependency> findAllByTrackingAndRepositoryId(boolean isTracking, Long repoId) {
        return dependencyRepo.findAllByTrackingAndRepositoryId(isTracking, repoId);
    }

}
