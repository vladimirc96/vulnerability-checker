package com.master.vulnerabilitychecker.service;

import com.master.vulnerabilitychecker.dto.RepositoryDTO;
import com.master.vulnerabilitychecker.dto.VulnerabilityDTO;
import com.master.vulnerabilitychecker.model.GithubUser;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class MailService {

    private JavaMailSender javaMailSender;
    private Environment environment;

    public MailService(JavaMailSender javaMailSender, Environment environment) {
        this.javaMailSender = javaMailSender;
        this.environment = environment;
    }

    public void sendVulnerabilityReport(GithubUser githubUser, List<VulnerabilityDTO> vulnerabilityDTOList){
        SimpleMailMessage mailMessage = new SimpleMailMessage();
        mailMessage.setTo(githubUser.getEmail());
        mailMessage.setFrom(environment.getProperty("spring.mail.username"));
        mailMessage.setSubject("Vulnerability report");
        RepositoryDTO repository = vulnerabilityDTOList.get(0).getRepositoryDTO();

        StringBuilder report = new StringBuilder();
        for(VulnerabilityDTO vulnerabilityDTO: vulnerabilityDTOList){
            report.append(vulnerabilityDTO.getName() + ": " + vulnerabilityDTO.getCveId() + ". More info: " + vulnerabilityDTO.getInfoUrl() + ".\n");
        }

        mailMessage.setText(
                "We would like to inform you about the vulnerabilities we have found for you in the " + repository.getName()  + "(" +  repository.getUrl()
                        + ") repository.\n\n"
                + "We found the following vulnerabilities that are published on the NVD database: \n"
                + report.toString()
        );

        javaMailSender.send(mailMessage);
    }

    public void sendLibraryReport(GithubUser githubUser, List<VulnerabilityDTO> vulnerabilityDTOList){
        SimpleMailMessage mailMessage = new SimpleMailMessage();
        mailMessage.setTo(githubUser.getEmail());
        mailMessage.setFrom(environment.getProperty("spring.mail.username"));
        mailMessage.setSubject("Library scan report");
        RepositoryDTO repository = vulnerabilityDTOList.get(0).getRepositoryDTO();

        StringBuilder report = new StringBuilder();
        for(VulnerabilityDTO vulnerabilityDTO: vulnerabilityDTOList){
            report.append(vulnerabilityDTO.getName() + ": " + vulnerabilityDTO.getCveId() + ". More info: " + vulnerabilityDTO.getInfoUrl() + ".\n");
        }

        mailMessage.setText(
                "We would like to inform you about the vulnerabilities we have found for you in the " + repository.getName()  + "(" +  repository.getUrl()
                        + ") repository from the dependencies that you are tracking.\n\n"
                        + "We found the following vulnerabilities that are published on the NVD database: \n"
                        + report.toString()
        );

        javaMailSender.send(mailMessage);
    }


}
