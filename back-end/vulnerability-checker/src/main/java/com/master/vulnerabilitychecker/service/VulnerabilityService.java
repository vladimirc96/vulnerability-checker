package com.master.vulnerabilitychecker.service;

import com.master.vulnerabilitychecker.dto.RepositoryDTO;
import com.master.vulnerabilitychecker.dto.SeverityV2ResponseDTO;
import com.master.vulnerabilitychecker.dto.SeverityV3ResponseDTO;
import com.master.vulnerabilitychecker.dto.VulnerabilityDTO;
import com.master.vulnerabilitychecker.dto.builder.VulnerabilityDTOBuilder;
import com.master.vulnerabilitychecker.model.Repository;
import com.master.vulnerabilitychecker.model.Vulnerability;
import com.master.vulnerabilitychecker.model.ids.VulnerabilityId;
import com.master.vulnerabilitychecker.repository.VulnerabilityRepository;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

@Service
public class VulnerabilityService {

    private VulnerabilityRepository vulnerabilityRepo;
    private GithubRepositoryService githubRepositoryService;

    public VulnerabilityService(VulnerabilityRepository vulnerabilityRepo, GithubRepositoryService githubRepositoryService) {
        this.vulnerabilityRepo = vulnerabilityRepo;
        this.githubRepositoryService = githubRepositoryService;
    }

    public Vulnerability save(Vulnerability vulnerability){
        return vulnerabilityRepo.save(vulnerability);
    }

    public VulnerabilityDTO findOneById(VulnerabilityId vulnerabilityId){
        Vulnerability vulnerability = vulnerabilityRepo.findOneById(vulnerabilityId);
        VulnerabilityDTO vulnerabilityDTO = new VulnerabilityDTOBuilder()
                .cveId(vulnerability.getId().getCveId())
                .infoUrl(vulnerability.getId().getCveId())
                .repositoryDTO(vulnerability.getRepository())
                .name(vulnerability.getName())
                .references(vulnerability.getReferenceUrls())
                .description(vulnerability.getDescription())
                .severityV2(vulnerability.getSeverityV2())
                .severityV3(vulnerability.getSeverityV3())
                .build();
        return vulnerabilityDTO;
    }

    public List<VulnerabilityDTO> findAllByRepositoryId(Long id){
        List<Vulnerability> vulnerabilities = vulnerabilityRepo.findAllByRepositoryId(id);
        List<VulnerabilityDTO> vulnerabilityDTOList = mapListDto(vulnerabilities);
        return vulnerabilityDTOList;
    }

    public List<VulnerabilityDTO> findAllTrackingVulnerabilities(Long repoId){
        List<Vulnerability> vulnerabilities = vulnerabilityRepo.findAllTrackingVulnerabilities(repoId);
        List<VulnerabilityDTO> vulnerabilityDTOList = mapListDto(vulnerabilities);
        return vulnerabilityDTOList;
    }

    public List<Vulnerability> findAll(){
        return vulnerabilityRepo.findAll();
    }

    public List<VulnerabilityDTO> findAllDto(){
        List<Vulnerability> vulnerabilities = vulnerabilityRepo.findAll();
        List<VulnerabilityDTO> vulnerabilityDTOList = mapListDto(vulnerabilities);
        return vulnerabilityDTOList;
    }

    public SeverityV2ResponseDTO findAllBySeverityV2(){
        List<Vulnerability> highList = vulnerabilityRepo.findAllBySeverityV2("HIGH");
        List<Vulnerability> mediumList = vulnerabilityRepo.findAllBySeverityV2("MEDIUM");
        List<Vulnerability> lowList = vulnerabilityRepo.findAllBySeverityV2("LOW");
        List<VulnerabilityDTO> highListDto = mapListDto(highList);
        List<VulnerabilityDTO> mediumListDto = mapListDto(mediumList);
        List<VulnerabilityDTO> lowListDto = mapListDto(lowList);
        return new SeverityV2ResponseDTO(highListDto, mediumListDto, lowListDto);
    }

    public SeverityV3ResponseDTO findAllBySeverityV3(){
        List<Vulnerability> criticalList = vulnerabilityRepo.findAllBySeverityV3("CRITICAL");
        List<Vulnerability> highList = vulnerabilityRepo.findAllBySeverityV3("HIGH");
        List<Vulnerability> mediumList = vulnerabilityRepo.findAllBySeverityV3("MEDIUM");
        List<Vulnerability> lowList = vulnerabilityRepo.findAllBySeverityV3("LOW");
        List<VulnerabilityDTO> criticalListDto = mapListDto(criticalList);
        List<VulnerabilityDTO> highListDto = mapListDto(highList);
        List<VulnerabilityDTO> mediumListDto = mapListDto(mediumList);
        List<VulnerabilityDTO> lowListDto = mapListDto(lowList);
        return new SeverityV3ResponseDTO(criticalListDto, highListDto, mediumListDto, lowListDto);
    }

    private List<VulnerabilityDTO> mapListDto(List<Vulnerability> vulnerabilities){
        List<VulnerabilityDTO> vulnerabilityDTOList = new ArrayList<>();
        for(Vulnerability vulnerability: vulnerabilities){
            Repository repository = githubRepositoryService.findOneById(vulnerability.getRepository().getId());
            VulnerabilityDTO vulnerabilityDTO = new VulnerabilityDTOBuilder()
                    .cveId(vulnerability.getId().getCveId())
                    .repositoryDTO(vulnerability.getRepository())
                    .name(vulnerability.getName())
                    .infoUrl(vulnerability.getId().getCveId())
                    .description(vulnerability.getDescription())
                    .severityV2(vulnerability.getSeverityV2())
                    .severityV3(vulnerability.getSeverityV3())
                    .build();
            vulnerabilityDTOList.add(vulnerabilityDTO);
        }
        return vulnerabilityDTOList;
    }

}
