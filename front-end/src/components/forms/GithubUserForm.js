import React, { Component } from 'react';
import { Formik, Field, Form, ErrorMessage } from 'formik';
import * as Yup from 'yup';
import userService from '../../service/UserService';
class GithubUserForm extends Component{ 
    
    handleSubmit = (fields) => {
        const data = {
            firstName: fields.firstName,
            lastName: fields.lastName,
            email: fields.email,
            username: fields.username,
            password: fields.password,
            accessToken: fields.accessToken,
        }
        userService.register(data, this.props.register);
    }

    render(){
        return(
            <div className="col-md-5">
                            <div className="p-5">
                            <Formik
                                                initialValues={{
                                                    firstName: '',
                                                    lastName: '',
                                                    email: '',
                                                    username: '',
                                                    password: '',
                                                    accessToken: '',
                                                }}
                                                validationSchema={Yup.object().shape({
                                                    firstName: Yup.string()
                                                        .required('First Name is required'),
                                                    lastName: Yup.string()
                                                        .required('Last Name is required'),
                                                    email: Yup.string()
                                                        .email('Email is invalid')  
                                                        .required('Email is required'),
                                                    username: Yup.string()
                                                        .required('Username is required'),
                                                    password: Yup.string()
                                                        .required('Password is required'),
                                                    accessToken: Yup.string()
                                                        .required('Access token is required'),
                                                })}
                                                onSubmit={fields => this.handleSubmit(fields)}
                                                render={({ errors, status, touched }) => (
                                                    <Form>
                                                                <div className={"form-group row"}>
                                                                <div className={"col-sm-6 mb-3 mb-sm-0"}>
                                                                    <Field type="text"
                                                                        name="firstName"
                                                                        className={'form-control form-control-user' + (errors.firstName && touched.firstName ? ' is-invalid' : '')}
                                                                        placeholder="First Name"/>
                                                                     <ErrorMessage name="firstName" component="div" className="invalid-feedback" />
                                                                </div>

                                                                <div className="col-sm-6">
                                                                    <Field type="text"
                                                                        name="lastName"
                                                                        className={'form-control form-control-user' + (errors.lastName && touched.lastName ? ' is-invalid' : '')}
                                                                        placeholder="Last Name"/>
                                                                     <ErrorMessage name="lastName" component="div" className="invalid-feedback" />
                                                                </div>
                                                                </div>
                                                                
                                                                <div className="form-group">
                                                                    <Field type="text"
                                                                        name="email"
                                                                        className={'form-control form-control-user' + (errors.email && touched.email ? ' is-invalid' : '')}
                                                                        placeholder="Email Address"/>
                                                                    <ErrorMessage name="email" component="div" className="invalid-feedback" />
                                                                </div>
                                                                
                                                                <div className="form-group row">
                                                                <div className="col-sm-6 mb-3 mb-sm-0">
                                                                    <Field type="text"
                                                                        name="username"
                                                                        className={'form-control form-control-user' + (errors.username && touched.username ? ' is-invalid' : '')}
                                                                        placeholder="Github username"/>
                                                                     <ErrorMessage name="username" component="div" className="invalid-feedback" />
                                                                </div>
                                                                
                                                                <div className="col-sm-6">
                                                                    <Field type="password"
                                                                        name="password"
                                                                        className={'form-control form-control-user' + (errors.password && touched.password ? ' is-invalid' : '')}
                                                                        placeholder="Password"/>
                                                                     <ErrorMessage name="password" component="div" className="invalid-feedback" />
                                                                </div>
                                                                </div>
                                                                <div className="form-group">
                                                                    <Field 
                                                                        name="accessToken"
                                                                        type="text"
                                                                        className={'form-control form-control-user' + (errors.accessToken && touched.accessToken ? ' is-invalid' : '')}
                                                                        placeholder="Access token"/>
                                                                        <ErrorMessage name="accessToken" component="div" className="invalid-feedback" />
                                                                  </div>
                                                                <button type="submit" className="btn btn-primary btn-user btn-block">
                                                                    Register Account
                                                                </button>
                                                                <hr/>
                                                    </Form>
                                                )}
                                            />
                            </div>
            </div>
        )
    }
}

export default GithubUserForm;