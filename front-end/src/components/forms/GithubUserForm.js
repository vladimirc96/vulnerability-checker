import React, { Component } from 'react';
import { Formik, Field, Form, ErrorMessage } from 'formik';
import * as Yup from 'yup';
import githubUserService from '../../service/GithubUserService';
class GithubUserForm extends Component{ 
    
    handleSubmit = (fields) => {
        githubUserService.register({username: fields.username, email: fields.email, accessToken: fields.accessToken}, this.props.register);
    }

    render(){
        return(
            <div className="col-md-5">
                            <div className="p-5">
                                <Formik 
                                    initialValues={{
                                        username: '',
                                        email: '',
                                        accessToken: '',
                                    }}
                                    validationSchema={Yup.object().shape({
                                        username: Yup.string()
                                            .required('Username is required'),
                                        email: Yup.string()
                                            .required('Email is required'),
                                        accessToken: Yup.string()
                                            .required('Access token is required'),
                                    })}
                                    onSubmit={fields => this.handleSubmit(fields)}
                                    render={ ({ errors, status, touched}) => (
                                        <Form>
                                             <div className="form-group">
                                                <Field 
                                                    name="username"
                                                    type="text"
                                                    className={'form-control form-control-user' + (errors.username && touched.username ? ' is-invalid' : '')}
                                                    placeholder="Enter username..."/>
                                                    <ErrorMessage name="username" component="div" className="invalid-feedback" />
                                            </div>
                                            <div className="form-group">
                                                <Field 
                                                    name="email"
                                                    type="email"
                                                    className={'form-control form-control-user' + (errors.email && touched.email ? ' is-invalid' : '')}
                                                    placeholder="Enter email..."/>
                                                    <ErrorMessage name="email" component="div" className="invalid-feedback" />
                                            </div>
                                            <div className="form-group">
                                                <Field 
                                                    name="accessToken"
                                                    type="text"
                                                    className={'form-control form-control-user' + (errors.accessToken && touched.accessToken ? ' is-invalid' : '')}
                                                    placeholder="Enter access token..."/>
                                                    <ErrorMessage name="accessToken" component="div" className="invalid-feedback" />
                                            </div>
                                            <button type="submit" className="btn btn-primary btn-user btn-block">
                                                Submit
                                            </button>
                                        </Form>
                                    ) }
                                />
                            </div>
            </div>
        )
    }
}

export default GithubUserForm;