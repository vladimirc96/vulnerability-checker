import React, {Component, Fragment} from 'react';
import dependencyService from '../service/DependencyService';

class Dependencies extends Component{
    constructor(){
        super();
        this.state = { 
            dependencies: []
        }
    }

    componentDidMount(){
        dependencyService.findAllByRepositoryId(this.props.match.params.repoId).then(
            (dependencies) =>{
                this.setState({dependencies : dependencies});
            }
        ).catch(error => alert(error));
    }

    track = (name) => {
        dependencyService.track(name).then(
            (dependency) => {
                this.setState((prevState) => {
                    let index = prevState.dependencies.findIndex(item => item.name === dependency.name);
                    let prevArray = prevState.dependencies;
                    prevArray.splice(index, 1, dependency);
                    return {
                        dependencies: prevArray
                    }
                })
            }
        ).catch(error => alert(error));
    }

    untrack = (name) => {
        dependencyService.untrack(name).then(
            (dependency) => {
                this.setState((prevState) => {
                    let index = prevState.dependencies.findIndex(item => item.name === dependency.name);
                    let prevArray = prevState.dependencies;
                    prevArray.splice(index, 1, dependency);
                    return {
                        dependencies: prevArray
                    }
                })
            }
        ).catch(error => alert(error));
    }

    render() {
        let deps = [];

        if(this.state.dependencies != undefined) {
            deps = this.state.dependencies.map(dependency => { 
                return(
                        <tr key={dependency.name}>
                            {dependency.tracking === false ? 
                                <Fragment><td>{dependency.name}</td> <td><button className="btn btn-primary" onClick={ () => this.track(dependency) }>Track</button></td></Fragment>
                                :        
                                <Fragment><td>{dependency.name}</td> <td><button className="btn btn-primary" onClick={ () => this.untrack(dependency) }>Untrack</button></td></Fragment>
                            }
                        </tr>)
            })
        }

        return(
            <div className="d-flex flex-column">
                <div className="table-responsive">
                { this.state.dependencies.length == 0 ? <h3>Repository is not scanned</h3>
                    :
                    <Fragment>
                    <h3>Dependencies</h3>
                        <table className="table">
                            <thead>
                                <tr>
                                <th scope="col">Name</th>
                                <th scope="col"></th>
                                <th></th>
                                </tr>
                            </thead>
                            <tbody>
                            { deps }
                            </tbody>
                        </table>
                    </Fragment>
            
                }

                </div>
                   

            </div>
        )
    }


}

export default Dependencies;