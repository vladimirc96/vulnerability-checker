import React, {Component} from 'react';
import { PieChart } from 'react-minimal-pie-chart';
import vulnerabilityService from '../../service/VulnerabilityService';

class SeverityV3Piechart extends Component {

    constructor(){
        super(); 
        this.state = {
            criticalList: [],
            highList: [],
            mediumlist: [],
            lowList: []
        }
    }

    componentDidMount(){
        vulnerabilityService.findAllByCvssV3().then(
            (data) => {
                this.setState(
                    {
                        criticalList: data.criticalList,
                        highList: data.highList,
                        mediumlist: data.mediumlist,
                        lowList: data.lowList
                    }
                )
            }
        ).catch(error => {alert(error)});
    }

    render(){
        let chartData = [];
        const criticalCount = this.state.criticalList != undefined ? this.state.criticalList.length : 0;
        const highCount = this.state.highList != undefined ? this.state.highList.length : 0;
        const mediumCount = this.state.mediumlist != undefined ? this.state.mediumlist.length : 0;
        const lowCount = this.state.lowList != undefined ? this.state.lowList.length : 0; 
        
        if(criticalCount == 0 && highCount == 0 && mediumCount == 0 && lowCount == 0){
            chartData = [
                { title: "No data.", value: 0, color: "white"},
            ] 
        }else{
            chartData = [
                { title: "CRITICAL", value: criticalCount, color: "#000000"},
                { title: "HIGH", value: highCount, color: "#C12E2A"},
                { title: "MEDIUM", value: mediumCount, color: "#EC971E"},
                { title: "LOW", value: lowCount, color: "#E3CC12"},
            ]

        }

        return (
        <div>
            <h2>CVSS V3 distribution</h2>
            <div className="row">
                <div className="col-lg-5">
                    {
                        chartData.length == 1 ? 
                        <PieChart
                            data={chartData}
                            label={({ dataEntry }) => dataEntry.title}
                            labelStyle={(index) => ({
                                fontSize: '10px',
                            })}
                            style={{height: "300px"}}
                        />
                        :
                        <PieChart
                            data={chartData}
                            label={({ dataEntry }) => dataEntry.value}
                            labelStyle={(index) => ({
                                fontSize: '10px',
                            })}
                            style={{height: "300px"}}
                        />
                    }
                </div>
                <div className="col-lg-7">
                    <table className="table table-striped"> 
                        <thead>
                            <tr>
                                <th>Severity</th>
                                <th>Number of Vulns</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr><td className="criticalCell">CRITICAL</td><td>{this.state.criticalList != undefined ? this.state.criticalList.length : ""}</td></tr>
                            <tr><td className="highCell">HIGH</td><td>{this.state.highList != undefined ? this.state.highList.length : ""}</td></tr>
                            <tr><td className="mediumCell">MEDIUM</td><td>{this.state.mediumlist != undefined ? this.state.mediumlist.length : ""}</td></tr>
                            <tr><td className="lowCell">LOW</td><td>{this.state.lowList != undefined ? this.state.lowList.length : ""}</td></tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    )
            
    }

}

export default SeverityV3Piechart;