import React, {Component, Fragment} from 'react';
import {Route} from 'react-router-dom';
import RepositoryList from './RepositoryList';
import RepositoryForm from './forms/RepositoryForm';
import repositoryService from '../service/RepositoryService';
import Dependencies from './Dependencies';

class Repositories extends Component {

    constructor(){
        super();
        this.state = {
            repositories: []
        }
    }

    componentDidMount(){
        repositoryService.findAll().then(
            (repos) => {
                this.setState({repositories: repos});
            }
        )
    }

    addRepository = (repo) => {
        this.setState(prevState => {
            let prevRepos = prevState.repositories;
            prevRepos.push(repo);
            return { 
                repositories: prevRepos
            }
        });
        
    }

    render() {
        const repos = this.state.repositories;
        return(
                <Fragment>
                    <Route path="/home/repositories" exact render={ () => {
                        return (
                            <div>
                                <div>
                                    <RepositoryForm addRepository={this.addRepository}/>
                                </div>
                                <div>
                                    <RepositoryList repositories={this.state.repositories}/>
                                </div>
                            </div>
                        )
                    }} />
                    <Route  path="/home/repositories/:repoId/dependencies" component={Dependencies}/>
                </Fragment>
        )
    }
}

export default Repositories;